#!/bin/bash\n# Esempio di utilizzo di set -x per il debugging\n\necho \"Questo script dimostra l\'effetto di \'set -x\' (o xtrace).\"\necho \"Ogni comando eseguito verrà stampato a terminale prima della sua esecuzione.\"\necho \"È molto utile per tracciare cosa sta facendo uno script.\"\necho \"\"\n\n# Salva lo stato corrente delle opzioni (opzionale, buona pratica)\noriginal_options=$(set +o)\n\n# Abilita la traccia dei comandi\necho \"--- Traccia ATTIVATA con 'set -x' ---\"\nset -x\n\n# Comandi di esempio\nNOME=\"Mondo\"\nNUMERO_RIGHE=$(ls -l *.sh | wc -l)\n\necho \"Ciao, $NOME!\"\necho \"Ci sono $NUMERO_RIGHE file .sh in questa directory.\"\n\n# Disabilita la traccia dei comandi\nset +x\necho \"--- Traccia DISATTIVATA con 'set +x' ---\"\n\necho \"\"\necho \"La traccia è ora disattivata.\"\n\n# Esempio di attivazione solo per una sezione specifica\necho \"\"\necho \"Esempio di blocco di debug specifico:\"\n\n# ... codice normale ...\nVAR1=\"Qualcosa\"\necho \"VAR1 è: $VAR1 (traccia non attiva)\"\n\n# Attiva la traccia per un blocco specifico\n( # Inizia una subshell per limitare l\'effetto di set -x\n  set -x\n  VAR2=\"Altro\"\n  echo \"Blocco di debug: VAR1=$VAR1, VAR2=$VAR2\"\n  if [ -n \"$VAR2\" ]; then\n    echo \"VAR2 non è vuota.\"\n  fi\n) # Fine della subshell, set -x non è più attivo qui\n\necho \"VAR2 al di fuori del blocco di debug: $VAR2 (dovrebbe essere vuota o dare errore se set -u è attivo)\"\n\n# Ripristina le opzioni originali (opzionale)\n# eval \"$original_options\" # Attenzione con eval, usare con cautela\n\necho \"\"\necho \"Fine dello script.\"\n\n# Nota: \n# - \'set -v\' (verbose) stampa le righe dello script così come vengono lette.\n# - \'set -x\' (xtrace) stampa il comando dopo tutte le espansioni e prima dell'esecuzione.\n# - Puoi usare \'set -o xtrace\' e \'set +o xtrace\' come alternativa a \'set -x\' e \'set +x\'.\n# - La variabile PS4 può essere usata per personalizzare il prompt di debug di xtrace.\n#   Esempio: export PS4=\'+ \${BASH_SOURCE[0]}:\${LINENO}:\${FUNCNAME[0]}: \'\n
